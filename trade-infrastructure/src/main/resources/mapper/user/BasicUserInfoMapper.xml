<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.funny.trade.infra.persistence.mapper.user.UserInfoMapper">
  <sql id="Base_Column_List">
    id, user_name, user_pwd, mobile_encrypt, mobile_hash, gmt_created, gmt_modified, 
    is_del
  </sql>
  <resultMap id="BaseResultMap" type="com.funny.trade.domain.user.entity.UserInfoEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="mobile_encrypt" jdbcType="VARCHAR" property="mobile" typeHandler="com.funny.combo.encrypt.handler.CryptTypeHandler" />
    <result column="mobile_hash" jdbcType="VARCHAR" property="mobileHash" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
  </resultMap>
  <sql id="sql_where_condition">
    <if test="userName  != null ">
       and user_name = #{userName,jdbcType=VARCHAR}
    </if>
    <if test="userPwd  != null ">
       and user_pwd = #{userPwd,jdbcType=VARCHAR}
    </if>
    <if test="mobile  != null ">
       and mobile_encrypt = #{mobile,jdbcType=VARCHAR,typeHandler=com.funny.combo.encrypt.handler.CryptTypeHandler}
    </if>
    <if test="mobileHash  != null ">
       and mobile_hash = #{mobileHash,jdbcType=VARCHAR,typeHandler=com.funny.combo.encrypt.handler.HashTypeHandler}
    </if>
    <if test="gmtCreated  != null ">
       and gmt_created = #{gmtCreated,jdbcType=TIMESTAMP}
    </if>
    <if test="gmtModified  != null ">
       and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    </if>
    <if test="isDel  != null ">
       and is_del = #{isDel,jdbcType=INTEGER}
    </if>
  </sql>
  <insert id="insertSelective" parameterType="com.funny.trade.domain.user.entity.UserInfoEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="mobile != null">
        mobile_encrypt,
      </if>
      <if test="mobile != null">
        mobile_hash,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR,typeHandler=com.funny.combo.encrypt.handler.CryptTypeHandler},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR,typeHandler=com.funny.combo.encrypt.handler.HashTypeHandler},
      </if>
    </trim>
  </insert>
  <update id="updateSelectiveById" parameterType="com.funny.trade.domain.user.entity.UserInfoEntity">
    update user_info
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile_encrypt = #{mobile,jdbcType=VARCHAR,typeHandler=com.funny.combo.encrypt.handler.CryptTypeHandler},
      </if>
      <if test="mobileHash != null">
        mobile_hash = #{mobile,jdbcType=VARCHAR,typeHandler=com.funny.combo.encrypt.handler.HashTypeHandler},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findEntityById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="listByCondition" parameterType="com.funny.trade.domain.user.entity.UserInfoEntity" resultMap="BaseResultMap">
    SELECT 
    <include refid="Base_Column_List" />
    FROM user_info where 1 = 1
    <include refid="sql_where_condition" />
  </select>
  <select id="count" parameterType="com.funny.trade.domain.user.entity.UserInfoEntity" resultMap="BaseResultMap">
    SELECT count(1) FROM user_info where 1 = 1
    <include refid="sql_where_condition" />
  </select>
</mapper>